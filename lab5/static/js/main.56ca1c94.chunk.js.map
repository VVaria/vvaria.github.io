{"version":3,"sources":["components/table.js","index.js"],"names":["Table","state","data","isLoading","fetch","then","response","json","setState","rates","this","className","getExchangeData","buf","cur","cur_name","i","length","currencyCode","currencyName","currencyRate","push","Component","ReactDOM","render","document","getElementById","App","renderHeader","path","href"],"mappings":"oQAIMA,G,8DACF,aAAgB,IAAD,8BACX,gBACKC,MAAQ,CACTC,KAAM,GACNC,WAAW,GAJJ,E,gEAQM,IAAD,OAEhBC,MADU,mDAETC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACF,EAAKC,SAAS,CACVN,KAAMK,EAAKE,MACXN,WAAW,S,+BAQnB,OAFsBO,KAAKT,MAAnBE,UAGG,0CAIP,yBAAKQ,UAAU,SACX,+BACI,+BACI,4BACI,wBAAIA,UAAU,eAAd,2DACA,wBAAIA,UAAU,eAAd,8HACA,wBAAIA,UAAU,eAAd,4KAEHD,KAAKE,uB,wCAyBtB,IAjBA,IAAIC,EAAM,GACNC,EAAM,CACN,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACtE,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAEtEC,EAAW,CACX,8FAAoB,0GAAsB,8FAAoB,oGAAqB,4EACnF,oGAAqB,4EAAiB,wFAAmB,4EAAiB,kFAAkB,gHAC5F,wFAAmB,8FAAoB,8FAAoB,wFAAmB,4EAAiB,gEAC/F,oGAAqB,2BAAQ,sHAAwB,kFAAkB,4EAAiB,kFACxF,8FAAoB,4HAAyB,sHAAwB,uCAAU,oGAC/E,gHAAuB,sHAAwB,0GAAsB,0GAAsB,yFAG3FN,EAAQC,KAAKT,MAAMC,KAEdc,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAAK,CACjC,IAAIE,EAAeJ,EAAIE,GACnBG,EAAeJ,EAASC,GACxBI,EAAeX,EAAMK,EAAIE,IAE7BH,EAAIQ,KACA,4BACI,4BAAKH,GACL,4BAAKC,GACL,4BAAKC,KAIjB,OAAOP,M,GA3EKS,cA8ELtB,IACfuB,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,S,IC5E5CC,E,uKAEE,OACI,kBAAC,IAAD,KACKjB,KAAKkB,eACN,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,KAAI,kBAAC,EAAD,W,qCAO5B,OACI,yBAAKlB,UAAU,mBACX,yBAAKA,UAAU,UACX,qHACA,yBAAKA,UAAU,YACX,uBAAGmB,KAAK,MAAR,8CACA,4BAAQnB,UAAU,aAAlB,yC,GAnBNW,aA2BHK,YACfJ,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.56ca1c94.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/table.css\";\r\n\r\nclass Table extends Component {\r\n    constructor () {\r\n        super();\r\n        this.state = {\r\n            data: [],\r\n            isLoading: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let url = \"https://api.exchangeratesapi.io/latest?base=RUB\";\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            this.setState({\r\n                data: json.rates,\r\n                isLoading: false\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isLoading } = this.state;\r\n\r\n        if (isLoading) {\r\n            return <h1>Loading...</h1>\r\n        }\r\n\r\n        return (\r\n            <div className=\"Table\">\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th className=\"TableHeader\">Код валюты</th>\r\n                            <th className=\"TableHeader\">Полное название валюты</th>\r\n                            <th className=\"TableHeader\">Курс валюты по отношению к рублю</th>\r\n                        </tr>\r\n                        {this.getExchangeData()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getExchangeData() {\r\n        let buf = [];\r\n        let cur = [\r\n            'CAD', 'HKD', 'ISK', 'PHP', 'DKK', 'HUF', 'CZK', 'GBP', 'RON', 'SEK', 'IDR',\r\n            'INR', 'BRL', 'RUB', 'HRK', 'JPY', 'THB', 'CHF', 'EUR', 'MYR', 'BGN', 'TRY',\r\n            'CNY', 'NOK', 'NZD', 'ZAR', 'USD', 'MXN', 'SGD', 'AUD', 'ILS', 'KRW', 'PLN'\r\n        ];\r\n        let cur_name = [\r\n            'Канадский доллар', 'Гонконгский доллар', 'Исландская крона', 'Филиппинское песо', 'Датская крона',\r\n            'Венгерский форинт', 'Чешская крона', 'Фунт стерлингов', 'Румынский лей', 'Шведская крона', 'Индонезийская рупия',\r\n            'Индийская рупия', 'Бразильский реал', 'Российский рубль', 'Хорватская куна', 'Японская иена', 'Тайский бат',\r\n            'Швейцарский франк', 'Евро', 'Малайзийский ринггит', 'Болгарский лев', 'Турецкая лира', 'Китайский юань',\r\n            'Норвежская крона', 'Новозеландский доллар', 'Южноафриканский рэнд', 'Доллар', 'Мексиканское песо',\r\n            'Сингапурский доллар', 'Австралийский доллар', 'Израильский шекель', 'Южнокорейская вона', 'Польский злотый' \r\n        ];\r\n        \r\n        let rates = this.state.data;\r\n\r\n        for (let i = 0; i < cur.length; i++) {\r\n            let currencyCode = cur[i];\r\n            let currencyName = cur_name[i];\r\n            let currencyRate = rates[cur[i]];\r\n\r\n            buf.push(\r\n                <tr>\r\n                    <th>{currencyCode}</th>\r\n                    <th>{currencyName}</th>\r\n                    <th>{currencyRate}</th>\r\n                </tr>\r\n            );\r\n        }\r\n        return buf;\r\n    }\r\n}\r\nexport default Table;\r\nReactDOM.render(<Table/>, document.getElementById(\"root\"));","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport \"./index.css\"\r\nimport Table from \"./components/table\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                {this.renderHeader()}\r\n                <Switch>\r\n                    <Route path=\"/\"><Table/></Route>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n\r\n    renderHeader() {\r\n        return(\r\n            <div className=\"headerContainer\">\r\n                <div className=\"header\">\r\n                    <h1>КОНВЕРТЕР ВАЛЮТ</h1>\r\n                    <div className=\"userInfo\">\r\n                        <a href=\"#/\">Главная</a>\r\n                        <button className=\"btn-login\">Войти</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}